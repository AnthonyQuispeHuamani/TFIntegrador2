/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Vistas;


import Controles.MaquinasDAO;
import Controles.UsuariosDAO;
import java.sql.SQLException;
import java.time.LocalDate;
import javax.swing.JOptionPane;
import Recurso.Conexion;
import java.sql.Connection;
import Objetos.Maquina;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author ACER
 */
public class Maquinas extends javax.swing.JPanel {

    /**
     * Creates new form Material
     */
    public Maquinas() {
        initComponents();
        cargarMaquinas();
        
        jTableMaquinas.addMouseListener(new java.awt.event.MouseAdapter() {
    public void mouseClicked(java.awt.event.MouseEvent evt) {
        int selectedRow = jTableMaquinas.getSelectedRow(); // Obtener la fila seleccionada
        if (selectedRow != -1) {
            // Obtener el ID de la máquina seleccionada
            int idMaquina = (int) jTableMaquinas.getValueAt(selectedRow, 0);

            // Almacenar el ID seleccionado para usarlo al editar
            IDMaquina.setText(String.valueOf(idMaquina)); // Opcional, para mostrar el ID en el campo

            // Cargar los demás datos en los JTextFields
            jTextFieldNombre.setText(jTableMaquinas.getValueAt(selectedRow, 1).toString());
            jTextFieldMarca.setText(jTableMaquinas.getValueAt(selectedRow, 2).toString());
            jTextFieldModelo.setText(jTableMaquinas.getValueAt(selectedRow, 3).toString());
            jTextFieldNumSerie.setText(jTableMaquinas.getValueAt(selectedRow, 4).toString());
            jComboBoxEstadoHerramienta.setSelectedItem(jTableMaquinas.getValueAt(selectedRow, 5).toString());
            jTextFieldUbicacion.setText(jTableMaquinas.getValueAt(selectedRow, 6).toString());
            Fecha.setText(jTableMaquinas.getValueAt(selectedRow, 7).toString());

            // Cargar la imagen
            cargarImagenMaquina(idMaquina); // Método para mostrar la imagen en jLabelVistaPrevia
        }
    }
});
        
    }
    private void mostrarFechaActual() {
        // Obtener la fecha actual
        LocalDate fechaActual = LocalDate.now();
        // Formatear la fecha (opcional, dependiendo del formato que desees)
        DateTimeFormatter formatoFecha = DateTimeFormatter.ofPattern("dd/MM/yyyy"); 
        String fechaFormateada = fechaActual.format(formatoFecha);
        // Mostrar la fecha en el JLabel
        Fecha.setText(fechaFormateada);
        
    }
    
    
    
    private void cargarImagenMaquina(int idMaquina) {
    try {
            // Obtener la conexión a la base de datos
            Connection connection = Conexion.getConnection();
            MaquinasDAO maquinaDAO = new MaquinasDAO(connection);

            // Obtener la máquina por su ID
            Maquina maquina = maquinaDAO.getMaquinaById(idMaquina);

            // Verificar si la máquina tiene una imagen
            byte[] imagenBytes = maquina.getFotoRecognicion();
            if (imagenBytes != null) {
                // Convertir el array de bytes en una imagen y mostrarla en el JLabel
                ImageIcon imageIcon = new ImageIcon(imagenBytes);
                Image image = imageIcon.getImage().getScaledInstance(jLabelVistaPrevia.getWidth(), jLabelVistaPrevia.getHeight(), Image.SCALE_SMOOTH);
                jLabelVistaPrevia.setIcon(new ImageIcon(image));
            } else {
                // Si no hay imagen, limpiar el JLabel
                jLabelVistaPrevia.setIcon(null);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al cargar la imagen de la máquina: " + e.getMessage());
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        BOTONUsuarios = new javax.swing.JButton();
        BOTONInformes = new javax.swing.JButton();
        BOTONInventario1 = new javax.swing.JButton();
        BOTONControlHerramientas = new javax.swing.JButton();
        BOTONMateriales = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jButton4 = new javax.swing.JButton();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMaquinas = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jTextField5 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldNombre = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldMarca = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldModelo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldNumSerie = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldUbicacion = new javax.swing.JTextField();
        jButtonEDITAR = new javax.swing.JButton();
        EliminarMaquina = new javax.swing.JButton();
        Guardar = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jComboBoxEstadoHerramienta = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        Fecha = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jButtonSeleccionarImagen = new javax.swing.JButton();
        jLabelVistaPrevia = new javax.swing.JLabel();
        IDMaquina = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        jInternalFrame1.setVisible(true);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jButton1.setText("PANEL");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        BOTONUsuarios.setText("USUARIOS");
        BOTONUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BOTONUsuariosMouseClicked(evt);
            }
        });

        BOTONInformes.setText("INFORMES");
        BOTONInformes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BOTONInformesMouseClicked(evt);
            }
        });

        BOTONInventario1.setText("INVENTARIO");
        BOTONInventario1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BOTONInventario1MouseClicked(evt);
            }
        });

        BOTONControlHerramientas.setText("CONTROL HERRAMIENTAS");
        BOTONControlHerramientas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BOTONControlHerramientasMouseClicked(evt);
            }
        });

        BOTONMateriales.setText("MATERIALES");
        BOTONMateriales.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BOTONMaterialesMouseClicked(evt);
            }
        });
        BOTONMateriales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BOTONMaterialesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(BOTONUsuarios)
                .addGap(18, 18, 18)
                .addComponent(BOTONInventario1)
                .addGap(18, 18, 18)
                .addComponent(BOTONMateriales)
                .addGap(18, 18, 18)
                .addComponent(BOTONInformes)
                .addGap(18, 18, 18)
                .addComponent(BOTONControlHerramientas, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                    .addComponent(BOTONUsuarios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BOTONInventario1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BOTONMateriales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BOTONInformes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BOTONControlHerramientas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Buscar");

        jButton4.setText("Buscar Fecha");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setText("Desde");

        jLabel11.setText("Hasta");

        jLabel13.setText("Estado");

        jTableMaquinas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Marca", "Modelo", "Numero Serie", "Estado", "Ubicacion", "Fecha"
            }
        ));
        jScrollPane1.setViewportView(jTableMaquinas);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 917, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(105, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Registro de Maquina");

        jLabel4.setText("Nombre");

        jTextFieldNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNombreActionPerformed(evt);
            }
        });

        jLabel5.setText("Marca");

        jTextFieldMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMarcaActionPerformed(evt);
            }
        });

        jLabel6.setText("Modelo");

        jTextFieldModelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldModeloActionPerformed(evt);
            }
        });

        jLabel7.setText("Numero de serie");

        jLabel8.setText("Ubicacion");

        jButtonEDITAR.setText("Editar");
        jButtonEDITAR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonEDITARMouseClicked(evt);
            }
        });

        EliminarMaquina.setText("Eliminar");
        EliminarMaquina.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EliminarMaquinaMouseClicked(evt);
            }
        });

        Guardar.setText("Guardar");
        Guardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GuardarMouseClicked(evt);
            }
        });
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });

        jLabel14.setText("Estado de Herramienta");

        jComboBoxEstadoHerramienta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Operativa", "Averiada", "En reparación" }));
        jComboBoxEstadoHerramienta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxEstadoHerramientaActionPerformed(evt);
            }
        });

        jLabel15.setText("Fecha Ingreso");

        Fecha.setText("--/--/--");

        jLabel16.setText("Imagen Herramienta");

        jButtonSeleccionarImagen.setText("Seleccionar Imagen");
        jButtonSeleccionarImagen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonSeleccionarImagenMouseClicked(evt);
            }
        });
        jButtonSeleccionarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSeleccionarImagenActionPerformed(evt);
            }
        });

        jLabelVistaPrevia.setText("Imagen");
        jLabelVistaPrevia.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabelVistaPrevia.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        IDMaquina.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        IDMaquina.setText("0");

        jLabel9.setText("ID Maquina");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(IDMaquina, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextFieldNombre)
                            .addComponent(jLabel5)
                            .addComponent(jTextFieldMarca)
                            .addComponent(jLabel6)
                            .addComponent(jTextFieldModelo)
                            .addComponent(jLabel7)
                            .addComponent(jTextFieldNumSerie)
                            .addComponent(jLabel8)
                            .addComponent(jTextFieldUbicacion)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(EliminarMaquina, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                                .addComponent(jButtonEDITAR, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE))
                            .addComponent(Guardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxEstadoHerramienta, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(31, 31, 31)
                                .addComponent(Fecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonSeleccionarImagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(71, 71, 71))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabelVistaPrevia, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(62, 62, 62))))))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addContainerGap(129, Short.MAX_VALUE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(128, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(IDMaquina)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldNumSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxEstadoHerramienta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(Fecha))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jButtonSeleccionarImagen))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelVistaPrevia, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonEDITAR)
                    .addComponent(EliminarMaquina))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(107, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addContainerGap(377, Short.MAX_VALUE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(396, Short.MAX_VALUE)))
        );

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jInternalFrame1.setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jInternalFrame1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextFieldNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNombreActionPerformed

    private void jTextFieldModeloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldModeloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldModeloActionPerformed

    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_GuardarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void GuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GuardarMouseClicked
        
        try {
            // Obtener la conexión a la base de datos
            Connection connection = Conexion.getConnection();

            // Crear una instancia de UsuariosDAO con la conexión
            MaquinasDAO maquinaDAO = new MaquinasDAO(connection);
            
            // Obtener los valores desde los JTextFields y el JComboBox
            String nombreHerramienta = jTextFieldNombre.getText();
            String marca = jTextFieldMarca.getText();
            String modelo = jTextFieldModelo.getText();
            String numeroSerie = jTextFieldNumSerie.getText();
            String estadoHerramienta = (String) jComboBoxEstadoHerramienta.getSelectedItem(); // Obtenemos el valor seleccionado del JComboBox
            String ubicacion = jTextFieldUbicacion.getText();
            
            LocalDate fechaCompra = LocalDate.now();  
               String fechaCompraString = fechaCompra.toString();  // Convertir la fecha a String en formato 'yyyy-MM-dd'
            
            // Asignar un valor temporal a foto_recognicion
            //byte[] fotoRecognicion = new byte[0]; // No estamos guardando imagen por ahora

            // Crear un nuevo objeto Maquinas con los valores obtenidos
            Maquina nuevaMaquina = new Maquina(
                0,  // El ID no es necesario porque es autoincremental en la base de datos
                nombreHerramienta, 
                marca, 
                modelo, 
                numeroSerie, 
                estadoHerramienta, 
                ubicacion, 
                fechaCompraString, 
                fotoSeleccionada
            );
            
            // Llamar al método addMaquina para guardar en la base de datos
            maquinaDAO.addMaquina(nuevaMaquina);
            
            // Mostrar mensaje de éxito
            JOptionPane.showMessageDialog(null, "Máquina guardada exitosamente.");
            cargarMaquinas();
            
        } catch (SQLException e) {
               e.printStackTrace();
               JOptionPane.showMessageDialog(this, "Error al guardar la Mquina: " + e.getMessage());
           } catch (NumberFormatException e) {
               JOptionPane.showMessageDialog(this, "Error en el formato");
           }
    
        
        
    }//GEN-LAST:event_GuardarMouseClicked

    private void jComboBoxEstadoHerramientaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxEstadoHerramientaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxEstadoHerramientaActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
            System.out.println("Bandera 5");
            frame.setSize(1500, 810);
            //frame.setContentPane(new Maquinas()); // Cambiar al nuevo panel
            //frame.setContentPane(new Usuarios()); // Cambiar al nuevo panel
                frame.setContentPane(new Panel()); // Cambiar al nuevo panel
            //frame.setContentPane(new Inventario()); // Cambiar al nuevo panel
            System.out.println("Bandera 5");
            frame.revalidate(); // Actualizar la interfaz
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButtonSeleccionarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSeleccionarImagenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonSeleccionarImagenActionPerformed

    private void jButtonSeleccionarImagenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSeleccionarImagenMouseClicked
        
        JFileChooser fileChooser = new JFileChooser();
    fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
    
    // Filtro para permitir solo imágenes
    FileNameExtensionFilter filter = new FileNameExtensionFilter("Imágenes", "jpg", "png", "jpeg", "bmp");
    fileChooser.setFileFilter(filter);
    
    int result = fileChooser.showOpenDialog(this);
    if (result == JFileChooser.APPROVE_OPTION) {
        File file = fileChooser.getSelectedFile();
        
        try {
            // Leer la imagen
            BufferedImage img = ImageIO.read(file);
            
            // Redimensionar imagen para que quepa en el JLabel
            Image dimg = img.getScaledInstance(jLabelVistaPrevia.getWidth(), jLabelVistaPrevia.getHeight(), Image.SCALE_SMOOTH);
            
            // Mostrar la imagen en el JLabel
            ImageIcon imageIcon = new ImageIcon(dimg);
            jLabelVistaPrevia.setIcon(imageIcon);
            
            // Guardar la imagen seleccionada en un atributo para poderla usar después
            // Por ejemplo, puedes convertir la imagen en un byte array para guardar en la base de datos
            this.fotoSeleccionada = convertirImagenABytes(img);
            
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al cargar la imagen: " + ex.getMessage());
        }
    }
        
        
    }//GEN-LAST:event_jButtonSeleccionarImagenMouseClicked

    private void jTextFieldMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMarcaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldMarcaActionPerformed

    private void BOTONUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BOTONUsuariosMouseClicked
         JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
            System.out.println("Bandera 5");
            frame.setSize(1500, 810);
            //frame.setContentPane(new Maquinas()); // Cambiar al nuevo panel
            //frame.setContentPane(new Materiales()); // Cambiar al nuevo panel
            frame.setContentPane(new Usuarios()); // Cambiar al nuevo panel
            //frame.setContentPane(new Informes()); // Cambiar al nuevo panel
            //frame.setContentPane(new Inventario()); // Cambiar al nuevo panel
            //frame.setContentPane(new ControlHerramientas()); // Cambiar al nuevo panel
            System.out.println("Bandera 5");
            frame.revalidate(); // Actualizar la interfaz
    }//GEN-LAST:event_BOTONUsuariosMouseClicked

    private void BOTONInformesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BOTONInformesMouseClicked
            JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
            System.out.println("Bandera 5");
            frame.setSize(1500, 810);
            //frame.setContentPane(new Maquinas()); // Cambiar al nuevo panel
            //frame.setContentPane(new Materiales()); // Cambiar al nuevo panel
            //frame.setContentPane(new Usuarios()); // Cambiar al nuevo panel
            frame.setContentPane(new Informes()); // Cambiar al nuevo panel
            //frame.setContentPane(new Inventario()); // Cambiar al nuevo panel
            //frame.setContentPane(new ControlHerramientas()); // Cambiar al nuevo panel
            System.out.println("Bandera 5");
            frame.revalidate(); // Actualizar la interfaz    
    }//GEN-LAST:event_BOTONInformesMouseClicked

    private void BOTONInventario1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BOTONInventario1MouseClicked
        JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
            System.out.println("Bandera 5");
            frame.setSize(1500, 810);
            //frame.setContentPane(new Maquinas()); // Cambiar al nuevo panel
            //frame.setContentPane(new Materiales()); // Cambiar al nuevo panel
            //frame.setContentPane(new Usuarios()); // Cambiar al nuevo panel
            //frame.setContentPane(new Informes()); // Cambiar al nuevo panel
            frame.setContentPane(new Inventario()); // Cambiar al nuevo panel
            //frame.setContentPane(new ControlHerramientas()); // Cambiar al nuevo panel
            System.out.println("Bandera 5");
            frame.revalidate(); // Actualizar la interfaz    
    }//GEN-LAST:event_BOTONInventario1MouseClicked

    private void BOTONControlHerramientasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BOTONControlHerramientasMouseClicked
        JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
            System.out.println("Bandera 5");
            frame.setSize(1500, 810);
            //frame.setContentPane(new Maquinas()); // Cambiar al nuevo panel
            //frame.setContentPane(new Materiales()); // Cambiar al nuevo panel
            //frame.setContentPane(new Usuarios()); // Cambiar al nuevo panel
            //frame.setContentPane(new Informes()); // Cambiar al nuevo panel
            //frame.setContentPane(new Inventario()); // Cambiar al nuevo panel
            frame.setContentPane(new ControlHerramientas()); // Cambiar al nuevo panel
            System.out.println("Bandera 5");
            frame.revalidate(); // Actualizar la interfaz    
    }//GEN-LAST:event_BOTONControlHerramientasMouseClicked

    private void BOTONMaterialesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BOTONMaterialesMouseClicked
        JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
            System.out.println("Bandera 5");
            frame.setSize(1500, 810);
            //frame.setContentPane(new Maquinas()); // Cambiar al nuevo panel
            frame.setContentPane(new Materiales()); // Cambiar al nuevo panel
            //frame.setContentPane(new Usuarios()); // Cambiar al nuevo panel
            //frame.setContentPane(new Informes()); // Cambiar al nuevo panel
            //frame.setContentPane(new Inventario()); // Cambiar al nuevo panel
            //frame.setContentPane(new ControlHerramientas()); // Cambiar al nuevo panel
            System.out.println("Bandera 5");
            frame.revalidate(); // Actualizar la interfaz    
    }//GEN-LAST:event_BOTONMaterialesMouseClicked

    private void BOTONMaterialesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOTONMaterialesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BOTONMaterialesActionPerformed

    private void jButtonEDITARMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonEDITARMouseClicked
        
        
        try {
            // Obtener la conexión a la base de datos
            Connection connection = Conexion.getConnection();
            MaquinasDAO maquinaDAO = new MaquinasDAO(connection);

            // Obtener el ID de la máquina seleccionada
            int idMaquina = Integer.parseInt(IDMaquina.getText());

            // Obtener los valores editados de los JTextFields
            String nombreHerramienta = jTextFieldNombre.getText();
            String marca = jTextFieldMarca.getText();
            String modelo = jTextFieldModelo.getText();
            String numeroSerie = jTextFieldNumSerie.getText();
            String estadoHerramienta = (String) jComboBoxEstadoHerramienta.getSelectedItem();
            String ubicacion = jTextFieldUbicacion.getText();
            
            
            LocalDate fechaCompra = LocalDate.now();  
               String fechaCompraString = fechaCompra.toString();  // Convertir la fecha a String en formato 'yyyy-MM-dd'
            
            

            // Obtener la imagen seleccionada, si se ha cargado una nueva
            byte[] fotoRecognicion = fotoSeleccionada; // Variable global donde guardas la imagen seleccionada

            // Verificar si hay una imagen nueva cargada
            if (fotoRecognicion == null) {
                JOptionPane.showMessageDialog(null, "Por favor, seleccione una nueva imagen.");
                return;  // Detiene el proceso si no hay imagen cargada
            }

            // Crear un objeto Maquina con los valores obtenidos
            Maquina maquinaEditada = new Maquina(
                idMaquina, 
                nombreHerramienta, 
                marca, 
                modelo, 
                numeroSerie, 
                estadoHerramienta, 
                ubicacion, 
                fechaCompraString, 
                fotoRecognicion
            );

            // Actualizar la máquina en la base de datos
            maquinaDAO.updateMaquina(maquinaEditada);

            // Mostrar mensaje de éxito
            JOptionPane.showMessageDialog(null, "Máquina actualizada exitosamente.");

            // Recargar la tabla para mostrar los cambios
            cargarMaquinas();

        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al actualizar la máquina: " + e.getMessage());
        }
    

        
        
    }//GEN-LAST:event_jButtonEDITARMouseClicked

    private void EliminarMaquinaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EliminarMaquinaMouseClicked
        try {
                // Obtener la fila seleccionada de la tabla de máquinas
                int selectedRow = jTableMaquinas.getSelectedRow();

                // Validar si se ha seleccionado una fila
                if (selectedRow == -1) {
                    JOptionPane.showMessageDialog(null, "Por favor selecciona una máquina.");
                    return;
                }

                // Obtener el ID de la máquina desde la tabla (ajusta el índice de la columna si es necesario)
                int idMaquina = (int) jTableMaquinas.getValueAt(selectedRow, 0);

                // Confirmación antes de eliminar
                int confirm = JOptionPane.showConfirmDialog(null, 
                    "¿Estás seguro de que deseas eliminar esta máquina? \n" 
                            + jTableMaquinas.getValueAt(selectedRow, 1) + " " // Nombre de la máquina (ajusta según tus columnas)
                            + jTableMaquinas.getValueAt(selectedRow, 2),      // Descripción o categoría (ajusta según tus columnas)
                    "Confirmar eliminación", 
                    JOptionPane.YES_NO_OPTION);

                if (confirm == JOptionPane.YES_OPTION) {
                    // Llamar a la función deleteMaquina en MaquinasDAO
                    MaquinasDAO maquinasDAO = new MaquinasDAO(Conexion.getConnection());
                    maquinasDAO.deleteMaquina(idMaquina);

                    // Refrescar la tabla después de la eliminación (opcional)
                    cargarMaquinas();

                    JOptionPane.showMessageDialog(null, "Máquina eliminada exitosamente.");
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al eliminar la máquina: " + ex.getMessage());
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Por favor selecciona una máquina válida.");
            }        // TODO add your handling code here:
    }//GEN-LAST:event_EliminarMaquinaMouseClicked
    private byte[] fotoSeleccionada; // Variable para almacenar la imagen seleccionada en bytes

// Método para convertir la imagen a bytes (para guardar en la base de datos)
    private byte[] convertirImagenABytes(BufferedImage image) {
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        try {
            ImageIO.write(image, "jpg", baos);
            baos.flush();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return baos.toByteArray();
    }
    private void cargarMaquinas() {
    try {
        // Obtener la conexión a la base de datos
        Connection connection = Conexion.getConnection();
        MaquinasDAO maquinaDAO = new MaquinasDAO(connection);

        // Obtener todas las máquinas de la base de datos
        List<Maquina> maquinas = maquinaDAO.getAllMaquinas();

        // Llenar la tabla con los datos de las máquinas
        DefaultTableModel model = (DefaultTableModel) jTableMaquinas.getModel();
        model.setRowCount(0);  // Limpiar la tabla antes de agregar las máquinas

        for (Maquina maquina : maquinas) {
            Object[] rowData = {
                maquina.getIdMaquina(),
                maquina.getNombreHerramienta(),
                maquina.getMarca(),
                maquina.getModelo(),
                maquina.getNumeroSerie(),
                maquina.getEstadoHerramienta(),
                maquina.getUbicacion(),
                maquina.getFechaEntrada(),
                // No mostramos la imagen aquí
            };
            model.addRow(rowData);
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error al cargar las máquinas: " + e.getMessage());
    }
    
    jTableMaquinas.addMouseListener(new java.awt.event.MouseAdapter() {
    public void mouseClicked(java.awt.event.MouseEvent evt) {
        int selectedRow = jTableMaquinas.getSelectedRow(); // Obtener la fila seleccionada
        if (selectedRow != -1) {
            // Obtener el ID de la máquina seleccionada
            int idMaquina = (int) jTableMaquinas.getValueAt(selectedRow, 0);

            // Llamar al método para cargar la imagen
            cargarImagenMaquina(idMaquina);
        }
    }
    });
    
    
}
    
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BOTONControlHerramientas;
    private javax.swing.JButton BOTONInformes;
    private javax.swing.JButton BOTONInventario1;
    private javax.swing.JButton BOTONMateriales;
    private javax.swing.JButton BOTONUsuarios;
    private javax.swing.JButton EliminarMaquina;
    private javax.swing.JLabel Fecha;
    private javax.swing.JButton Guardar;
    private javax.swing.JLabel IDMaquina;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButtonEDITAR;
    private javax.swing.JButton jButtonSeleccionarImagen;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBoxEstadoHerramienta;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelVistaPrevia;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableMaquinas;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextFieldMarca;
    private javax.swing.JTextField jTextFieldModelo;
    private javax.swing.JTextField jTextFieldNombre;
    private javax.swing.JTextField jTextFieldNumSerie;
    private javax.swing.JTextField jTextFieldUbicacion;
    // End of variables declaration//GEN-END:variables
}
